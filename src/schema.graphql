# import * from "./generated/prisma.graphql"

schema {
    query: Query
    mutation: Mutation
}

type Query {
    info: String!
    type(where: TypeWhereInput): [Type!]!
    pokemon(where: PokemonWhereInput): [Pokemon!]!
}

type Mutation {
    createType(
        name: String!
        strongWith: TypeCreateManyWithoutStrongWithInput # [Type!]!
        weakWith: TypeCreateManyWithoutWeakWithInput # [Type!]!
    ): Type!
    createPokemon(
        nationalNumber: Int
        name: String!
        height: Float
        weight: Float
        hp: Int
        attack: Int
        defense: Int
        type: TypeCreateManyWithoutPokemonsInput # [Type!]!
        artwork: String
        previousEvolutions: PokemonCreateManyWithoutPreviousEvolutionsInput # [Pokemon!]!
        nextEvolutions: PokemonCreateManyWithoutNextEvolutionsInput # [Pokemon!]!
    ): Pokemon!
}

type Type {
    name: String!
    strongWith: [Type!]!
    weakWith: [Type!]!
    pokemon: [Pokemon!]!
}

type Pokemon {
    nationalNumber: Int
    name: String!
    height: Float
    weight: Float
    hp: Int
    attack: Int
    defense: Int
    type: [Type!]!
    artwork: String
    previousEvolutions: [Pokemon!]!
    nextEvolutions: [Pokemon!]!
}
